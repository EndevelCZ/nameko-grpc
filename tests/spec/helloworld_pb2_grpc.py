# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import helloworld_pb2 as helloworld__pb2


class greeterStub(object):
    """The greeting service definition.
  """

    def __init__(self, channel):
        """Constructor.

    Args:
      channel: A grpc.Channel.
    """
        self.say_hello = channel.unary_unary(
            "/greeter/say_hello",
            request_serializer=helloworld__pb2.HelloRequest.SerializeToString,
            response_deserializer=helloworld__pb2.HelloReply.FromString,
        )
        self.say_hello_goodbye = channel.unary_stream(
            "/greeter/say_hello_goodbye",
            request_serializer=helloworld__pb2.HelloRequest.SerializeToString,
            response_deserializer=helloworld__pb2.HelloReply.FromString,
        )
        self.say_hello_to_many = channel.stream_stream(
            "/greeter/say_hello_to_many",
            request_serializer=helloworld__pb2.HelloRequest.SerializeToString,
            response_deserializer=helloworld__pb2.HelloReply.FromString,
        )
        self.say_hello_to_many_at_once = channel.stream_unary(
            "/greeter/say_hello_to_many_at_once",
            request_serializer=helloworld__pb2.HelloRequest.SerializeToString,
            response_deserializer=helloworld__pb2.HelloReply.FromString,
        )


class greeterServicer(object):
    """The greeting service definition.
  """

    def say_hello(self, request, context):
        """Sends a greeting
    """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def say_hello_goodbye(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def say_hello_to_many(self, request_iterator, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def say_hello_to_many_at_once(self, request_iterator, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_greeterServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "say_hello": grpc.unary_unary_rpc_method_handler(
            servicer.say_hello,
            request_deserializer=helloworld__pb2.HelloRequest.FromString,
            response_serializer=helloworld__pb2.HelloReply.SerializeToString,
        ),
        "say_hello_goodbye": grpc.unary_stream_rpc_method_handler(
            servicer.say_hello_goodbye,
            request_deserializer=helloworld__pb2.HelloRequest.FromString,
            response_serializer=helloworld__pb2.HelloReply.SerializeToString,
        ),
        "say_hello_to_many": grpc.stream_stream_rpc_method_handler(
            servicer.say_hello_to_many,
            request_deserializer=helloworld__pb2.HelloRequest.FromString,
            response_serializer=helloworld__pb2.HelloReply.SerializeToString,
        ),
        "say_hello_to_many_at_once": grpc.stream_unary_rpc_method_handler(
            servicer.say_hello_to_many_at_once,
            request_deserializer=helloworld__pb2.HelloRequest.FromString,
            response_serializer=helloworld__pb2.HelloReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "greeter", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
